# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
  build:
    name: Build Question Server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        working-directory: ['./back/QuestionServer', './back/CourseServer']
    env:
      working-directory: ${{ matrix.working-directory }}

    container: node:14

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '${{ env.working-directory }}/package-lock.json'
    - run: npm ci
      working-directory: ${{ env.working-directory }}
    - run: npm run test
      working-directory: ${{ env.working-directory }}
